# Copyright 2025 Marcelo Parisi (github.com/feitnomore)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-container-image 
  namespace: mnp-cicd
spec:
  description: Kaniko task to build and push an image
  params:
    - name: IMAGE_REGISTRY
      description: The registry URL.
      type: string
    - name: IMAGE_NAME
      description: image name.
      type: string
    - name: IMAGE_TAG
      description: image tag.
      type: string
    - name: DOCKERFILE_PATH
      description: Path to the Dockerfile relative to the context.
      default: "Dockerfile"
    - name: CONTEXT_SUBDIR
      description: >-
        The subdirectory within the source workspace to use as the build context.
        Defaults to the root of the workspace.
      type: string
      default: "."

  workspaces:
    - name: source
      description: Holds the build context and the Dockerfile.
    - name: dockerconfig
      description: Docker credentials
      optional: true

  volumes:
    - name: varlibcontainers
      emptyDir: {}

  steps:
    - name: build
      image: quay.io/buildah/stable:latest
      imagePullPolicy: Always
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -e

        echo "--- BUILD CONTAINER IMAGE ---"
        
        BUILD_CONTEXT=$(params.CONTEXT_SUBDIR)
        DOCKERFILE_PATH=$(params.CONTEXT_SUBDIR)/$(params.DOCKERFILE_PATH)
        IMAGE_NAME_TAG=$(params.IMAGE_REGISTRY)/$(params.IMAGE_NAME):$(params.IMAGE_TAG)
        
        buildah --storage-driver=vfs bud \
          --timestamp=0 --format=docker \
          --tls-verify=false --no-cache \
          -f ${DOCKERFILE_PATH} -t ${IMAGE_NAME_TAG} ${BUILD_CONTEXT}
          
      volumeMounts:
      - name: varlibcontainers
        mountPath: /var/lib/containers

      securityContext:
        privileged: true # Necessário para rodar o Buildah dentro de um contêiner

    - name: push
      image: quay.io/buildah/stable:latest
      imagePullPolicy: Always
      workingDir: $(workspaces.source.path)
      env:
        - name: DOCKER_CONFIG
          value: $(workspaces.dockerconfig.path)
      script: |
        #!/bin/bash

        echo "--- PUSH CONTAINER IMAGE ---"

        MAX_RETRIES=3
        DELAY_SECONDS=30
        RETRY_COUNT=0
        
        IMAGE_NAME_TAG=$(params.IMAGE_REGISTRY)/$(params.IMAGE_NAME):$(params.IMAGE_TAG)
        
        while [ ${RETRY_COUNT} -lt ${MAX_RETRIES} ]; do

          echo "--- Attempt $((RETRY_COUNT + 1)) / ${MAX_RETRIES} ---"

          buildah --storage-driver=vfs push \
            --tls-verify=false \
            --digestfile $(workspaces.source.path)/image-digest ${IMAGE_NAME_TAG} \
            docker://${IMAGE_NAME_TAG}

          if [ $? -eq 0 ]; then
            exit 0
          else
            RETRY_COUNT=$((RETRY_COUNT + 1))
            
            if [ ${RETRY_COUNT} -lt ${MAX_RETRIES} ]; then
              echo "Waiting ${DELAY_SECONDS} seconds..."
              sleep ${DELAY_SECONDS}
            fi
          fi
        done
          
      volumeMounts:
      - name: varlibcontainers
        mountPath: /var/lib/containers
