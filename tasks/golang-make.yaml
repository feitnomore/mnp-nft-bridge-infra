# Copyright 2025 Marcelo Parisi (github.com/feitnomore)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: golang-make 
  namespace: mnp-cicd
spec:
  description: Uses a custom Go builder image to run 'make' commands
  params:
    - name: MAKE_TARGETS
      description: "The make target(s) to execute (e.g., 'build', 'test all')."
      type: string
      default: "build"
    - name: SUBDIRECTORY
      description: "Subdirectory within the source workspace where the Makefile is located."
      type: string
      default: "."
    - name: pipelinerun-name
      description: "The name of the current PipelineRun to inspect."
      type: string

  workspaces:
    - name: source
      description: "A workspace containing the source code to be built."
    - name: artifacts
      description: "A workspace to store build artifacts."
      optional: true
    - name: shared-output
      description: "Workspace for storing logs and output files."

  steps:
    - name: run-golang-make
      image: registry.wifi.feitoza.com.br/docker-repo/golang:latest
      imagePullPolicy: Always
      workingDir: $(workspaces.source.path)/$(params.SUBDIRECTORY)
      script: |
        #!/bin/bash
        set -e

        export MAKE_TARGETS="$(params.MAKE_TARGETS)"
        export PIPELINERUN_NAME="$(params.pipelinerun-name)"
        export OUTPUT_DIR="/workspace/shared-output/${PIPELINERUN_NAME}"
        set -e # Sair em erro

        echo "--- GO MAKE BUILD SCRIPT START ---"
        echo "Working directory: $(pwd)"
        echo "Make target(s): $(params.MAKE_TARGETS)"

        echo "Running make $(params.MAKE_TARGETS)..."
        make $(params.MAKE_TARGETS)

        if [ "${MAKE_TARGETS}" = "coverage-report-html" ]
        then
          mkdir -p "${OUTPUT_DIR}"
          cp coverage.out ${OUTPUT_DIR}/coverage.out
          cp coverage.html ${OUTPUT_DIR}/coverage.html
        fi

        echo "Make command finished."
        echo "--- GO MAKE BUILD SCRIPT END ---"
