# Copyright 2025 Marcelo Parisi (github.com/feitnomore)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-infra-images
  namespace: mnp-cicd
spec:
  description: Clones the infra repo, then builds and pushes a Docker images for Golang and CLI
  params:
    - name: IMAGE_REGISTRY
      description: The registry URL.
      type: string
    - name: CLI_IMAGE_NAME
      description: image name.
      type: string
    - name: CLI_IMAGE_TAG
      description: image tag.
      type: string
    - name: ARTIFACTS_IMAGE_NAME
      description: image name.
      type: string
    - name: ARTIFACTS_IMAGE_TAG
      description: image tag.
      type: string
    - name: GO_IMAGE_NAME
      description: image name.
      type: string
    - name: GO_IMAGE_TAG
      description: image tag.
      type: string
    - name: INFRA_REPO_URL
      description: "URL of the infrastructure Git repository."
    - name: INFRA_REPO_BRANCH
      description: "Revision of the infrastructure Git repository."
      default: "main"
    - name: infra-repo-clone-subdir
      description: "Subdirectory within the workspace to clone the infra repo into."
      default: "infra-source-code"

  workspaces:
    - name: shared-workspace
      description: "Workspace for cloning the repo and for the build context."
    - name: docker-credentials
      description: "Docker credential"
      optional: true
    - name: shared-output
      description: "Workspace for storing logs and output files."

  tasks:
    - name: git-clone 
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.INFRA_REPO_URL)
        - name: revision
          value: $(params.INFRA_REPO_BRANCH)
        - name: subdirectory
          value: $(params.infra-repo-clone-subdir)
        - name: deleteExisting
          value: "true"
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: build-golang
      taskRef:
        name: build-container-image
      runAfter: [git-clone]
      params:
        - name: IMAGE_REGISTRY
          value: $(params.IMAGE_REGISTRY)
        - name: IMAGE_NAME
          value: $(params.GO_IMAGE_NAME)
        - name: IMAGE_TAG
          value: $(params.GO_IMAGE_TAG)
        - name: DOCKERFILE_PATH
          value: images/Dockerfile.golang 
        - name: CONTEXT_SUBDIR
          value: $(params.infra-repo-clone-subdir)
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: dockerconfig
          workspace: docker-credentials

    - name: wait-build-golang
      taskRef:
        name: wait
      runAfter: [build-golang]
      params:
        - name: DURATION
          value: "30"

    - name: build-cli-tools
      taskRef:
        name: build-container-image
      runAfter: [wait-build-golang]
      params:
        - name: IMAGE_REGISTRY
          value: $(params.IMAGE_REGISTRY)
        - name: IMAGE_NAME
          value: $(params.CLI_IMAGE_NAME)
        - name: IMAGE_TAG
          value: $(params.CLI_IMAGE_TAG)
        - name: DOCKERFILE_PATH
          value: images/Dockerfile.cli 
        - name: CONTEXT_SUBDIR
          value: $(params.infra-repo-clone-subdir)
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: dockerconfig
          workspace: docker-credentials

  finally: 
    - name: check-overall-status
      taskRef: { name: check-pipelinerun-status }
      params:
        - name: pipelinerun-name
          value: $(context.pipelineRun.name)
        - name: IMAGE_REGISTRY
          value: $(params.IMAGE_REGISTRY)
        - name: CLI_IMAGE_NAME
          value: $(params.CLI_IMAGE_NAME)
        - name: CLI_IMAGE_TAG
          value: "latest"
